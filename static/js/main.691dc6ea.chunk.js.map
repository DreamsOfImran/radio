{"version":3,"sources":["radio.jpg","components/Loader.js","components/Radio.js","App.js","index.js"],"names":["Loader","className","LIMIT_OPTIONS","Radio","useState","loading","setLoading","stations","setStations","limit","setLimit","stationFilter","setStationFilter","favourites","setFavourites","currentlyPlaying","setCurrentlyPlaying","playerRef","useRef","useEffect","current","slice","length","storedFavourites","JSON","parse","localStorage","getItem","setItem","stringify","setupApi","then","data","a","api","RadioBrowserApi","fetch","bind","window","searchStations","language","setDefaultSrc","event","target","src","defaultImage","map","filter","onClick","value","onChange","e","l","station","index","some","f","changeId","removeFavourite","handleFavourites","favicon","alt","onError","name","ref","el","urlResolved","showJumpControls","layout","customProgressBarSection","customControlsSection","autoPlayAfterSrcChange","onPlay","audio","pause","pauseOtherStations","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.691dc6ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/radio.6085ad72.jpg\";","import React from 'react'\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      Loading...\n    </div>\n  )\n}\n\nexport default Loader\n","import React, { useEffect, useRef, useState } from 'react'\nimport { RadioBrowserApi } from 'radio-browser-api'\nimport AudioPlayer from 'react-h5-audio-player'\nimport defaultImage from '../radio.jpg'\nimport Loader from './Loader'\n\nimport 'react-h5-audio-player/lib/styles.css'\n\nconst LIMIT_OPTIONS = [10, 20, 30, 40, 50]\n\nconst Radio = () => {\n  const [loading, setLoading] = useState(false)\n  const [stations, setStations] = useState([])\n  const [limit, setLimit] = useState(30)\n  const [stationFilter, setStationFilter] = useState(\"tamil\")\n  const [favourites, setFavourites] = useState([])\n  const [currentlyPlaying, setCurrentlyPlaying] = useState(null);\n  const playerRef = useRef([])\n\n  useEffect(() => {\n    playerRef.current = playerRef.current.slice(0, stations.length)\n  }, [stations])\n\n  useEffect(() => {\n    const storedFavourites = JSON.parse(localStorage.getItem(\"radio_favourites\"))\n    if(storedFavourites) {\n      setFavourites(storedFavourites)\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"radio_favourites\", JSON.stringify(favourites))\n  }, [favourites])\n\n  useEffect(() => {\n    if(stationFilter !== \"favourites\") {\n      setupApi(stationFilter).then(data => {\n        setStations(data)\n      })\n    } else {\n      setStations(favourites)\n    }\n    // eslint-disable-next-line\n  }, [stationFilter, limit])\n\n  const setupApi = async (stationFilter) => {\n    setLoading(true)\n    const api = new RadioBrowserApi(fetch.bind(window), \"My Radio App\")\n\n    const stations = await api.searchStations({\n      language: stationFilter,\n      limit: limit\n    })\n    setLoading(false)\n\n    return stations\n  }\n\n  const filters = [\n    \"favourites\",\n    \"tamil\",\n    \"english\",\n    \"hindi\",\n    \"telugu\"\n  ]\n\n  const setDefaultSrc = (event) => {\n    event.target.src = defaultImage\n  }\n\n  const handleFavourites = (station) => {\n    if(favourites.some(f => f.changeId === station.changeId)) {\n      const removeFavourite = favourites.filter(f => f.changeId !== station.changeId)\n      setFavourites(removeFavourite)\n      if(stationFilter === \"favourites\") {\n        setStations(removeFavourite)\n      }\n    } else {\n      setFavourites([...favourites, station])\n    }\n  }\n\n  const pauseOtherStations = (index) => {\n    if(currentlyPlaying !== null) {\n      playerRef.current[currentlyPlaying].audio.current.pause()\n      setCurrentlyPlaying(index)\n    } else {\n      setCurrentlyPlaying(index)\n    }\n  }\n\n  return (\n    <div className=\"radio\">\n      <div className=\"filters\">\n        {filters.map(filter => (\n          <span\n            key={filter}\n            className={stationFilter === filter ? \"selected\" : \"\"}\n            onClick={() => setStationFilter(filter)}\n          >\n            {filter}\n          </span>\n        ))}\n        <select className=\"options\" value={limit} onChange={(e) => setLimit(e.target.value)}>\n          {LIMIT_OPTIONS.map(l => (\n            <option key={l} value={l}>{l} Stations</option>\n          ))}\n        </select>\n      </div>\n      {loading ? <Loader /> : (\n        <div className=\"stations\">\n          {stations && stations.map((station, index) => (\n            <div className=\"station\" key={index}>\n              <div className=\"favourite\" onClick={() => {handleFavourites(station)}}>\n                {favourites.some(f => f.changeId === station.changeId) ? \"♥\" : \"♡\"}\n              </div>\n              <div className=\"stationName\">\n                <img\n                  src={station.favicon}\n                  alt=\"station logo\"\n                  className=\"logo\"\n                  onError={setDefaultSrc}\n                />\n                <div className=\"name\">{station.name}</div>\n              </div>\n\n              <AudioPlayer\n                ref={el => playerRef.current[index] = el}\n                className=\"player\"\n                src={station.urlResolved}\n                showJumpControls={false}\n                layout=\"stacked\"\n                customProgressBarSection={[]}\n                customControlsSection={[\"MAIN_CONTROLS\", \"VOLUME_CONTROLS\"]}\n                autoPlayAfterSrcChange={false}\n                onPlay={() => pauseOtherStations(index)}\n              />\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default Radio\n","import './App.scss'\nimport Radio from './components/Radio'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Super-Duper Radio Player</h1>\n      <h2>Pick a language, choose a station, start listening!</h2>\n      <Radio />\n    </div>\n  );\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}